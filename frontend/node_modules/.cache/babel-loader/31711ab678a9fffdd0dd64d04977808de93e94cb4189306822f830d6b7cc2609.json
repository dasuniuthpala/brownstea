{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:5000/dorders\";\nexport const getOrders = async () => {\n  try {\n    console.log(\"Fetching orders from:\", API_URL); // Debugging\n    const response = await axios.get(API_URL);\n    return response;\n  } catch (error) {\n    console.error(\"Axios GET /orders error:\", error); // Log error details\n    throw error;\n  }\n};\nexport const addOrder = async order => {\n  try {\n    console.log(\"Sending order:\", order); // Debug the payload\n    const response = await axios.post(\"http://localhost:5000/dorders\", order, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    console.log(\"Order added successfully:\", response.data); // Log success\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error(\"Error adding order:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message); // Log detailed error\n    throw error;\n  }\n};\nexport const deleteOrder = async id => {\n  try {\n    const response = await axios.delete(`${API_URL}/${id}`);\n    return response;\n  } catch (error) {\n    console.error(\"Error deleting order:\", error);\n    throw error;\n  }\n};\nexport const updateOrder = async (id, order) => {\n  try {\n    console.log(\"Sending update request:\", {\n      id,\n      order\n    }); // Debug outgoing payload\n    const response = await axios.put(`http://localhost:5000/dorders/${id}`, order);\n    console.log(\"Update success response:\", response.data); // Log success\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    console.error(\"Update error response:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message); // Log error\n    throw error;\n  }\n};\nexport const getOrderById = async id => {\n  try {\n    const response = await axios.get(`${API_URL}/${id}`);\n    return response;\n  } catch (error) {\n    console.error(\"Error fetching order by ID:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","getOrders","console","log","response","get","error","addOrder","order","post","headers","data","_error$response","message","deleteOrder","id","delete","updateOrder","put","_error$response2","getOrderById"],"sources":["D:/Projects/BROWNS_Last/frontend/src/services/orderService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:5000/dorders\"; \r\n\r\n\r\nexport const getOrders = async () => {\r\n  try {\r\n    console.log(\"Fetching orders from:\", API_URL); // Debugging\r\n    const response = await axios.get(API_URL);\r\n    return response;\r\n  } catch (error) {\r\n    console.error(\"Axios GET /orders error:\", error); // Log error details\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\nexport const addOrder = async (order) => {\r\n  try {\r\n    console.log(\"Sending order:\", order); // Debug the payload\r\n    const response = await axios.post(\"http://localhost:5000/dorders\", order, {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n    console.log(\"Order added successfully:\", response.data); // Log success\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error adding order:\", error.response?.data || error.message); // Log detailed error\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\nexport const deleteOrder = async (id) => {\r\n  try {\r\n    const response = await axios.delete(`${API_URL}/${id}`);\r\n    return response;\r\n  } catch (error) {\r\n    console.error(\"Error deleting order:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateOrder = async (id, order) => {\r\n  try {\r\n    console.log(\"Sending update request:\", { id, order }); // Debug outgoing payload\r\n    const response = await axios.put(`http://localhost:5000/dorders/${id}`, order);\r\n    console.log(\"Update success response:\", response.data); // Log success\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Update error response:\", error.response?.data || error.message); // Log error\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getOrderById = async (id) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/${id}`);\r\n    return response;\r\n  } catch (error) {\r\n    console.error(\"Error fetching order by ID:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,+BAA+B;AAG/C,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;EACnC,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEH,OAAO,CAAC,CAAC,CAAC;IAC/C,MAAMI,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAACL,OAAO,CAAC;IACzC,OAAOI,QAAQ;EACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdJ,OAAO,CAACI,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAAC,CAAC;IAClD,MAAMA,KAAK;EACb;AACF,CAAC;AAGD,OAAO,MAAMC,QAAQ,GAAG,MAAOC,KAAK,IAAK;EACvC,IAAI;IACFN,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEK,KAAK,CAAC,CAAC,CAAC;IACtC,MAAMJ,QAAQ,GAAG,MAAML,KAAK,CAACU,IAAI,CAAC,+BAA+B,EAAED,KAAK,EAAE;MACxEE,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAChD,CAAC,CAAC;IACFR,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEC,QAAQ,CAACO,IAAI,CAAC,CAAC,CAAC;IACzD,OAAOP,QAAQ,CAACO,IAAI;EACtB,CAAC,CAAC,OAAOL,KAAK,EAAE;IAAA,IAAAM,eAAA;IACdV,OAAO,CAACI,KAAK,CAAC,qBAAqB,EAAE,EAAAM,eAAA,GAAAN,KAAK,CAACF,QAAQ,cAAAQ,eAAA,uBAAdA,eAAA,CAAgBD,IAAI,KAAIL,KAAK,CAACO,OAAO,CAAC,CAAC,CAAC;IAC7E,MAAMP,KAAK;EACb;AACF,CAAC;AAGD,OAAO,MAAMQ,WAAW,GAAG,MAAOC,EAAE,IAAK;EACvC,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAML,KAAK,CAACiB,MAAM,CAAC,GAAGhB,OAAO,IAAIe,EAAE,EAAE,CAAC;IACvD,OAAOX,QAAQ;EACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdJ,OAAO,CAACI,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMW,WAAW,GAAG,MAAAA,CAAOF,EAAE,EAAEP,KAAK,KAAK;EAC9C,IAAI;IACFN,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAE;MAAEY,EAAE;MAAEP;IAAM,CAAC,CAAC,CAAC,CAAC;IACvD,MAAMJ,QAAQ,GAAG,MAAML,KAAK,CAACmB,GAAG,CAAC,iCAAiCH,EAAE,EAAE,EAAEP,KAAK,CAAC;IAC9EN,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEC,QAAQ,CAACO,IAAI,CAAC,CAAC,CAAC;IACxD,OAAOP,QAAQ,CAACO,IAAI;EACtB,CAAC,CAAC,OAAOL,KAAK,EAAE;IAAA,IAAAa,gBAAA;IACdjB,OAAO,CAACI,KAAK,CAAC,wBAAwB,EAAE,EAAAa,gBAAA,GAAAb,KAAK,CAACF,QAAQ,cAAAe,gBAAA,uBAAdA,gBAAA,CAAgBR,IAAI,KAAIL,KAAK,CAACO,OAAO,CAAC,CAAC,CAAC;IAChF,MAAMP,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMc,YAAY,GAAG,MAAOL,EAAE,IAAK;EACxC,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,GAAGL,OAAO,IAAIe,EAAE,EAAE,CAAC;IACpD,OAAOX,QAAQ;EACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdJ,OAAO,CAACI,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}